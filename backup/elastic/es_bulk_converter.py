"""
Provides utilities for converting ElasticsearchDump dump data into a format compatible
with the Elasticsearch Bulk API.
"""

import json
from typing import Any, Iterator


def _read_lines(
    file_path: str,
) -> Iterator[str]:
    """Read lines from a file, yielding each line stripped of newline characters.

    Args:
        file_path (str): path to the file to read.

    Yields:
        Iterator[str]: each line from the file with newline characters removed.
    """
    with open(file_path, "r", encoding="utf-8") as file:
        for line in file:
            yield line.strip("\n")


def _parse_elasticsearchdump_json(
    input_file: str,
) -> list[dict[str, Any]]:
    """Parses ElasticsearchDump JSON into Elasticsearch bulk API format.

    Args:
        input_file (str): path to input JSON file generated by ElasticsearchDump.

    Returns:
        list[dict[str, Any]]: bulk data formatted for Elasticsearch API.
    """
    bulk_data = []

    for line in _read_lines(input_file):
        document = json.loads(line)
        metadata = {
            "index": {
                "_index": document["_index"],
                "_id": document["_id"],
            }
        }
        source = document["_source"]

        bulk_data.append(metadata)
        bulk_data.append(source)

    return bulk_data


def _save_bulk_data_to_file(
    bulk_data: list[dict[str, Any]],
    output_file: str,
) -> None:
    """Saves bulk data to a file in JSON lines format.

    Args:
        bulk_data (list[dict[str, Any]]): data to save, formatted for Elasticsearch bulk API.
        output_file (str): path to the output file.
    """
    with open(output_file, "w") as outfile:
        for line in bulk_data:
            outfile.write(json.dumps(line) + "\n")


def convert(
    input_file: str,
    output_file: str,
) -> None:
    """Executes the Elasticsearch dump conversion process.

    Args:
        input_file (str): path to input JSON file generated by ElasticsearchDump.
        output_file (str): output file with suitable format for bulk load using
            Elasticsearch API.
    """
    bulk_data = _parse_elasticsearchdump_json(input_file)
    _save_bulk_data_to_file(bulk_data, output_file)
    print(f"Reformatted data written to {output_file}")


if __name__ == "__main__":
    convert(
        input_file="initial-dump.json",
        output_file="dump.json",
    )
