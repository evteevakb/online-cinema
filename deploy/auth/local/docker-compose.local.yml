include:
  - path: ../../api/local/docker-compose.local.yml
  - path: ../../admin/docker-compose.local.yml

services:
  auth:
    build:
      context: ../../../services/auth/src
      dockerfile: Dockerfile
    container_name: auth
    depends_on:
      auth-db:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    env_file:
      - envs/.db.env
      - envs/.redis.env
      - envs/.service.env
    expose: [8000]
    healthcheck:
      test: curl -s http://$${API_HOST}:$${API_PORT}/api/health || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
    image: auth:latest
    restart: always

  auth-db:
    container_name: auth-db
    env_file: envs/.db.env
    expose: [5432]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres:17.2
    restart: always
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  auth-redis:
    container_name: auth-redis
    entrypoint: ["/bin/bash", "-c", "/entrypoint.sh"]
    env_file:
      - envs/.redis.env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    image: redis:7.4.2
    expose: [6379]
    restart: always
    volumes:
      - auth-redis-data:/data
      - ../../init/redis/entrypoint.sh:/entrypoint.sh

  auth-jaeger:
    container_name: auth-jaeger
    expose: [4318]  # HTTP server
    image: jaegertracing/jaeger:2.5.0
    ports:
      - 16686:16686  # UI
    restart: always
    volumes:
      - auth-jaeger-data:/tmp

  nginx:
    extends:
      file: ../../admin/docker-compose.nginx.yml
      service: nginx
    depends_on:
      - admin
      - api
      - auth
    ports:
      - "80:80"  # admin
      - "81:81"  # api
      - "82:82"  # auth
    volumes:
      - ../../init/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../admin/configs/admin-nginx.conf:/etc/nginx/conf.d/admin-nginx.conf:ro
      - ../../api/configs/api-nginx.conf:/etc/nginx/conf.d/api-nginx.conf:ro
      - ../configs/auth-nginx.conf:/etc/nginx/conf.d/auth-nginx.conf:ro
      - admin-static-files:/app/staticfiles

volumes:
  auth-db-data:
  auth-jaeger-data:
  auth-redis-data:
